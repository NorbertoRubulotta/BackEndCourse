-CREAR BASE DE DATOS ECOMMERCE

        use ecommerce

- CREAR DOS COLECCIONES MENSAJES Y PRODUCTOS
- Agregar 10 documentos con valores distintos a las colecciones mensajes y productos.

        db.products.insertMany([{title: "Escuadra", 
        price: 123.45, 
        thumbnail: "https://cdn3.iconfinder.com/data/icons/education-209/64/ruler-triangle-stationary-school-256.png"} ,

        {title: "Calculadora",
        price: 234.56,
        thumbnail: "https://cdn3.iconfinder.com/data/icons/education-209/64/calculator-math-tool-school-256.png"} ,

        {title: "Globo Terráqueo",
        price: 345.67,
        thumbnail: "https://cdn3.iconfinder.com/data/icons/education-209/64/globe-earth-geograhy-planet-school-256.png"},

        {title: "Lámpara",
        price: 650.67,
        thumbnail: "https://cdn3.iconfinder.com/data/icons/education-and-school-8/48/Light-512.png"},

        {title: "Mochila",
        price: 3450,
        thumbnail: " https://cdn3.iconfinder.com/data/icons/education-209/64/bag-pack-container-school-512.png"},

        {title: "Pelotas",
        price: 2500,
        thumbnail: "https://cdn4.iconfinder.com/data/icons/education-759/2050/Education_flat-30-512.png"},

        {title: "Pizarra",
        price: 4900,
        thumbnail: "https://cdn3.iconfinder.com/data/icons/education-209/64/board-math-class-school-512.png"},

        {title: "Lápices",
        price: 250,
        thumbnail: "https://cdn1.iconfinder.com/data/icons/office-icons-17/512/ilustracoes_04-01-512.png"},

        {title: "Libros",
        price: 4567,
        thumbnail: "https://cdn3.iconfinder.com/data/icons/beos/Library.png"},

        {title: "Agenda",
        price: 2500,
        thumbnail: "https://cdn3.iconfinder.com/data/icons/education-209/64/book-note-paper-school-512.png"}])

        db.messages.insertMany([{ email:"test@gmail.com",
            text:"messageTest1" },
        {   email:"test2@gmail.com",
            text:"messageTest2" },
        {   email:"test@gmail.com",
            text:"messageTest3" },
        {   email:"test2@gmail.com",
            text:"messageTest4" },
        {   email:"test@gmail.com",
            text:"messageTest5" },
        {   email:"test2@gmail.com",
            text:"messageTest6" },
        {   email:"test@gmail.com",
            text:"messageTest7" },
        {   email:"test2@gmail.com",
            text:"messageTest8" },
        {   email:"test2@gmail.com",
            text:"messageTest9" },
        {   email:"test2@gmail.com",
            text:"messageTest10" }])

 -Listar todos los documentos en cada colección.
        db.products.find()
        db.messages.find()

 -Mostrar la cantidad de documentos almacenados en cada una de ellas.
        db.products.count()
        db.messages.count()

 -Realizar un CRUD sobre la colección de productos:
        Agregar un producto más en la colección de productos 
            db.products.insertOne({title: "TestInsert",
            price: 100,
            thumbnail: "TestInsert"})

        Realizar una consulta por nombre de producto específico:

            db.products.findOne({title:"Pizarra"})
            db.products.findOne({title:"Pelotas"})

        Listar los productos con precio menor a 1000 pesos.
            db.products.find( {price: {$lt:1000}} )

        Listar los productos con precio entre los 1000 a 3000 pesos.
             db.products.find( {price: {$gt:1000 , $lt:3000}} )

        Listar los productos con precio mayor a 3000 pesos.
            db.products.find( {price: {$gt:3000}} )

        Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
        db.products.find({},{"title":1,"_id":0}).sort({ price: 1}).skip(2).limit(1)

        Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
        db.products.updateMany({}, {$set: {stock:100} })

        Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 
        db.products.updateMany({price: {$gt: 4000}},{$set: {stock:0}})

        Borrar los productos con precio menor a 1000 pesos 
        db.products.deleteMany({price: {$lt: 1000}})
        
    - Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce.
    Verificar que pepe no pueda cambiar la información.

    use admin

        db.createUser(
        {
            user: "root",
            pwd: "mongopassword",
            roles:  ["root"]
        }
        )


        db.createUser(
        {
            user: "pepe",
            pwd: "asd456",
            roles: [
            { role: "read", db: "ecommerce" }
            ]
        }
        )

